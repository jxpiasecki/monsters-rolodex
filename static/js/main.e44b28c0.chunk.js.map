{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","useState","monster","id","image","reloadImage","className","onClick","e","Math","random","src","name","email","CardList","monsters","map","item","SearchBox","placeholder","handleChange","type","onChange","App","setState","searchField","target","value","console","log","state","fetch","then","response","json","data","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAGaA,G,MAAO,SAACC,GAAW,IAAD,EACEC,mBAASD,EAAME,QAAQC,IADzB,mBACpBC,EADoB,KACbC,EADa,KAE3B,OACI,sBAAKC,UAAU,iBAAiBC,QAAS,SAACC,GAAD,OAAOH,EAAYI,KAAKC,WAAjE,UAEI,qBAAKC,IAAG,+BAA0BP,EAA1B,4BACR,6BAAKJ,EAAME,QAAQU,OACnB,4BAAIZ,EAAME,QAAQW,aCLjBC,EAAW,SAACd,GACrB,OACI,qBAAKM,UAAU,YAAf,SACIN,EAAMe,UACNf,EAAMe,SAASC,KACX,SAACC,GAAD,OAAU,cAAC,EAAD,CAAoBf,QAASe,GAAlBA,EAAKd,UCN7Be,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OAAO,uBAAOd,UAAU,SAASe,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC2CxEG,E,kDAzCX,WAAYvB,GAAQ,IAAD,8BACf,cAAMA,IAeVoB,aAAe,SAACZ,GACZ,EAAKgB,SACD,CAACC,YAAajB,EAAEkB,OAAOC,QACvB,kBAAMC,QAAQC,IAAIrB,EAAEkB,OAAOC,WAjB/B,EAAKG,MAAQ,CACTf,SAAU,GACVU,YAAa,IAJF,E,gEAUE,IAAD,OAChBM,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKX,SAAS,CAACT,SAAUoB,S,+BAUrC,IAAD,EAC2BC,KAAKN,MAA9Bf,EADF,EACEA,SAAUU,EADZ,EACYA,YACXY,EAAmBZ,EACnBV,EAASuB,QACP,SAAArB,GAAI,OAAIA,EAAKL,KAAK2B,cAAcC,SAASf,EAAYc,kBAEvDxB,EACN,OACI,sBAAKT,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CAAWa,YAAY,SAASC,aAAcgB,KAAKhB,eACnD,cAAC,EAAD,CAAUL,SAAUsB,W,GAnClBI,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e44b28c0.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './card.styles.css';\n\nexport const Card = (props) => {\n    const [image, reloadImage] = useState(props.monster.id);\n    return (\n        <div className=\"card-container\" onClick={(e) => reloadImage(Math.random())}>\n            {/*<img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>*/}\n            <img src={`https://robohash.org/${image}?set=set2&size=180x180`}/>\n            <h2>{props.monster.name}</h2>\n            <p>{props.monster.email}</p>\n            {/*<span>{JSON.stringify(props.monster)}</span>*/}\n        </div>\n    );\n}","import React from 'react';\nimport './card-list.styles.css';\n\nimport {Card} from \"../card/card.component\";\n\nexport const CardList = (props) => {\n    return (\n        <div className=\"card-list\">{\n            props.monsters &&\n            props.monsters.map(\n                (item) => <Card key={item.id} monster={item}/>\n            )\n        }</div>\n    );\n}","import React from 'react';\n\nimport './search-box.css';\n\nexport const SearchBox = ({placeholder, handleChange}) => {\n    return <input className='search' type=\"search\" placeholder={placeholder} onChange={handleChange}/>;\n}","import React from 'react';\nimport './App.css';\n\nimport {CardList} from \"./components/card-list/card-list.component\";\nimport {SearchBox} from \"./components/search-box/search-box\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            monsters: [],\n            searchField: ''\n        }\n\n        //this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(data => this.setState({monsters: data}));\n    }\n\n    handleChange = (e) => {\n        this.setState(\n            {searchField: e.target.value},\n            () => console.log(e.target.value)\n        );\n    }\n\n    render() {\n        const {monsters, searchField} = this.state;\n        const filteredMonsters = searchField\n            ? monsters.filter(\n                item => item.name.toLowerCase().includes(searchField.toLowerCase())\n            )\n            : monsters;\n        return (\n            <div className=\"App\">\n                <h1>Monsters Rolodex</h1>\n                <SearchBox placeholder=\"search\" handleChange={this.handleChange}/>\n                <CardList monsters={filteredMonsters}/>\n            </div>\n        );\n    }\n\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}